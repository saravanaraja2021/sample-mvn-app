name: Maven CI/CD - Linux

on: [push]

jobs:
  build_and_test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 14
      uses: actions/setup-java@v1
      with:
        java-version: 14

    - name: Build project with Maven
      run: mvn -B clean install --file pom.xml
      
    - name: version
      run: echo "version=`grep -iA 10 modelversion pom.xml  | grep version | sed 's/version//g' | sed 's/[<>/ ]//g'`" >> $GITHUB_OUTPUT
      id: project

    - name: Show extracted Maven project version
      run: echo ${{ steps.project.outputs.version }}  
    
    - name: Package with maven
      run: mvn package
    - run: mkdir artifact && cp webapp/target/*.war artifact
    - uses: actions/upload-artifact@v2
      with:
       name: Package
       path: artifact  
    - name: Login to DockerHub Repo
      uses: docker/login-action@v2
      with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Publish to Docker Hub
      uses: docker/build-push-action@v1     
      with:       
         username: ${{ secrets.DOCKER_USERNAME }} 
         password:  ${{ secrets.DOCKER_PASSWORD }}
         repository: ${{ secrets.DOCKER_USERNAME }}/mysample777     
         tags: ${{ steps.project.outputs.version }} 
         label: ${{ steps.project.outputs.version }}
  Deploy:
    needs: build_and_test
    runs-on: ubuntu-latest
    
    steps:    
      - uses: actions/checkout@v2
      
      - name: Extract Maven project version
        run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        id: project
      
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.HOST_NAME }}
          username: ${{ secrets.USER_NAME }}
          key: ${{ secrets.AWS_PRIVATE_KEY }}
          script: |
           sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
           sudo docker pull ${{ secrets.DOCKER_USERNAME }}/mysample777:${{steps.project.outputs.version}} 
           sudo sleep 3
           sudo docker images
           sudo docker run -d  --name myapp -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/mysample777:${{steps.project.outputs.version}}
